Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> body
Rule 1     body -> statement
Rule 2     statement -> paragraph
Rule 3     statement -> statement NEWPAR paragraph
Rule 4     paragraph -> expression
Rule 5     paragraph -> title
Rule 6     paragraph -> paragraph CR expression
Rule 7     expression -> factor
Rule 8     title -> H1 factor
Rule 9     title -> H2 factor
Rule 10    title -> H3 factor
Rule 11    factor -> STAR TEXT STAR
Rule 12    factor -> DSTAR TEXT DSTAR
Rule 13    factor -> TEXT
Rule 14    factor -> factor TEXT

Terminals, with rules where they appear

CR                   : 6
DSTAR                : 12 12
H1                   : 8
H2                   : 9
H3                   : 10
NEWPAR               : 3
STAR                 : 11 11
TEXT                 : 11 12 13 14
error                : 

Nonterminals, with rules where they appear

body                 : 0
expression           : 4 6
factor               : 7 8 9 10 14
paragraph            : 2 3 6
statement            : 1 3
title                : 5

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . statement
    (2) statement -> . paragraph
    (3) statement -> . statement NEWPAR paragraph
    (4) paragraph -> . expression
    (5) paragraph -> . title
    (6) paragraph -> . paragraph CR expression
    (7) expression -> . factor
    (8) title -> . H1 factor
    (9) title -> . H2 factor
    (10) title -> . H3 factor
    (11) factor -> . STAR TEXT STAR
    (12) factor -> . DSTAR TEXT DSTAR
    (13) factor -> . TEXT
    (14) factor -> . factor TEXT

    H1              shift and go to state 6
    H2              shift and go to state 4
    H3              shift and go to state 5
    STAR            shift and go to state 2
    DSTAR           shift and go to state 7
    TEXT            shift and go to state 9

    body                           shift and go to state 1
    title                          shift and go to state 3
    paragraph                      shift and go to state 8
    statement                      shift and go to state 10
    factor                         shift and go to state 11
    expression                     shift and go to state 12

state 1

    (0) S' -> body .



state 2

    (11) factor -> STAR . TEXT STAR

    TEXT            shift and go to state 13


state 3

    (5) paragraph -> title .

    CR              reduce using rule 5 (paragraph -> title .)
    NEWPAR          reduce using rule 5 (paragraph -> title .)
    $end            reduce using rule 5 (paragraph -> title .)


state 4

    (9) title -> H2 . factor
    (11) factor -> . STAR TEXT STAR
    (12) factor -> . DSTAR TEXT DSTAR
    (13) factor -> . TEXT
    (14) factor -> . factor TEXT

    STAR            shift and go to state 2
    DSTAR           shift and go to state 7
    TEXT            shift and go to state 9

    factor                         shift and go to state 14

state 5

    (10) title -> H3 . factor
    (11) factor -> . STAR TEXT STAR
    (12) factor -> . DSTAR TEXT DSTAR
    (13) factor -> . TEXT
    (14) factor -> . factor TEXT

    STAR            shift and go to state 2
    DSTAR           shift and go to state 7
    TEXT            shift and go to state 9

    factor                         shift and go to state 15

state 6

    (8) title -> H1 . factor
    (11) factor -> . STAR TEXT STAR
    (12) factor -> . DSTAR TEXT DSTAR
    (13) factor -> . TEXT
    (14) factor -> . factor TEXT

    STAR            shift and go to state 2
    DSTAR           shift and go to state 7
    TEXT            shift and go to state 9

    factor                         shift and go to state 16

state 7

    (12) factor -> DSTAR . TEXT DSTAR

    TEXT            shift and go to state 17


state 8

    (2) statement -> paragraph .
    (6) paragraph -> paragraph . CR expression

    NEWPAR          reduce using rule 2 (statement -> paragraph .)
    $end            reduce using rule 2 (statement -> paragraph .)
    CR              shift and go to state 18


state 9

    (13) factor -> TEXT .

    TEXT            reduce using rule 13 (factor -> TEXT .)
    CR              reduce using rule 13 (factor -> TEXT .)
    NEWPAR          reduce using rule 13 (factor -> TEXT .)
    $end            reduce using rule 13 (factor -> TEXT .)


state 10

    (1) body -> statement .
    (3) statement -> statement . NEWPAR paragraph

    $end            reduce using rule 1 (body -> statement .)
    NEWPAR          shift and go to state 19


state 11

    (7) expression -> factor .
    (14) factor -> factor . TEXT

    CR              reduce using rule 7 (expression -> factor .)
    NEWPAR          reduce using rule 7 (expression -> factor .)
    $end            reduce using rule 7 (expression -> factor .)
    TEXT            shift and go to state 20


state 12

    (4) paragraph -> expression .

    CR              reduce using rule 4 (paragraph -> expression .)
    NEWPAR          reduce using rule 4 (paragraph -> expression .)
    $end            reduce using rule 4 (paragraph -> expression .)


state 13

    (11) factor -> STAR TEXT . STAR

    STAR            shift and go to state 21


state 14

    (9) title -> H2 factor .
    (14) factor -> factor . TEXT

    CR              reduce using rule 9 (title -> H2 factor .)
    NEWPAR          reduce using rule 9 (title -> H2 factor .)
    $end            reduce using rule 9 (title -> H2 factor .)
    TEXT            shift and go to state 20


state 15

    (10) title -> H3 factor .
    (14) factor -> factor . TEXT

    CR              reduce using rule 10 (title -> H3 factor .)
    NEWPAR          reduce using rule 10 (title -> H3 factor .)
    $end            reduce using rule 10 (title -> H3 factor .)
    TEXT            shift and go to state 20


state 16

    (8) title -> H1 factor .
    (14) factor -> factor . TEXT

    CR              reduce using rule 8 (title -> H1 factor .)
    NEWPAR          reduce using rule 8 (title -> H1 factor .)
    $end            reduce using rule 8 (title -> H1 factor .)
    TEXT            shift and go to state 20


state 17

    (12) factor -> DSTAR TEXT . DSTAR

    DSTAR           shift and go to state 22


state 18

    (6) paragraph -> paragraph CR . expression
    (7) expression -> . factor
    (11) factor -> . STAR TEXT STAR
    (12) factor -> . DSTAR TEXT DSTAR
    (13) factor -> . TEXT
    (14) factor -> . factor TEXT

    STAR            shift and go to state 2
    DSTAR           shift and go to state 7
    TEXT            shift and go to state 9

    expression                     shift and go to state 23
    factor                         shift and go to state 11

state 19

    (3) statement -> statement NEWPAR . paragraph
    (4) paragraph -> . expression
    (5) paragraph -> . title
    (6) paragraph -> . paragraph CR expression
    (7) expression -> . factor
    (8) title -> . H1 factor
    (9) title -> . H2 factor
    (10) title -> . H3 factor
    (11) factor -> . STAR TEXT STAR
    (12) factor -> . DSTAR TEXT DSTAR
    (13) factor -> . TEXT
    (14) factor -> . factor TEXT

    H1              shift and go to state 6
    H2              shift and go to state 4
    H3              shift and go to state 5
    STAR            shift and go to state 2
    DSTAR           shift and go to state 7
    TEXT            shift and go to state 9

    factor                         shift and go to state 11
    paragraph                      shift and go to state 24
    expression                     shift and go to state 12
    title                          shift and go to state 3

state 20

    (14) factor -> factor TEXT .

    TEXT            reduce using rule 14 (factor -> factor TEXT .)
    CR              reduce using rule 14 (factor -> factor TEXT .)
    NEWPAR          reduce using rule 14 (factor -> factor TEXT .)
    $end            reduce using rule 14 (factor -> factor TEXT .)


state 21

    (11) factor -> STAR TEXT STAR .

    TEXT            reduce using rule 11 (factor -> STAR TEXT STAR .)
    CR              reduce using rule 11 (factor -> STAR TEXT STAR .)
    NEWPAR          reduce using rule 11 (factor -> STAR TEXT STAR .)
    $end            reduce using rule 11 (factor -> STAR TEXT STAR .)


state 22

    (12) factor -> DSTAR TEXT DSTAR .

    TEXT            reduce using rule 12 (factor -> DSTAR TEXT DSTAR .)
    CR              reduce using rule 12 (factor -> DSTAR TEXT DSTAR .)
    NEWPAR          reduce using rule 12 (factor -> DSTAR TEXT DSTAR .)
    $end            reduce using rule 12 (factor -> DSTAR TEXT DSTAR .)


state 23

    (6) paragraph -> paragraph CR expression .

    CR              reduce using rule 6 (paragraph -> paragraph CR expression .)
    NEWPAR          reduce using rule 6 (paragraph -> paragraph CR expression .)
    $end            reduce using rule 6 (paragraph -> paragraph CR expression .)


state 24

    (3) statement -> statement NEWPAR paragraph .
    (6) paragraph -> paragraph . CR expression

    NEWPAR          reduce using rule 3 (statement -> statement NEWPAR paragraph .)
    $end            reduce using rule 3 (statement -> statement NEWPAR paragraph .)
    CR              shift and go to state 18

